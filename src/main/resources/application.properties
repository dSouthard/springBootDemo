server.port=9090

spring.datasource.url=jdbc:postgresql://localhost:5432/springdb
spring.datasource.username=spring
spring.datasource.password=spring
spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.generate-ddl=true

#postgres=# create user spring with password 'spring';
#CREATE ROLE
#postgres=# create database springdb;
#CREATE DATABASE
#postgres=# grant all privileges on database springdb to spring;
#GRANT
#postgres=#

#
#http Request
#
#POST /user HTTP/1.1
#Host: localhost:8080
#Content-Type: application/json
#
#{
#"name" : "name 1",
#"age" : 20,
#"email" : "name1@gmail.com"
#}
#CURL equivalent
#
#curl -X POST \
#  http://localhost:8080/user \
#  -H 'content-type: application/json' \
#  -d '{
#"name" : "name 1",
#"age" : 20,
#"email" : "name1@gmail.com"
#}'
#
#2. Read
#http Request
#
#GET /user/1 HTTP/1.1
#Host: localhost:8080
#CURL equivalent
#
#curl -X GET \
#  http://localhost:8080/user/1 \
#3. Update
#http Request
#
#PUT /user HTTP/1.1
#Host: localhost:8080
#Content-Type: application/json
#
#{
#"id" : 1,
#"_class" : "com.example.model.User",
#"name" : "name 1",
#"age" : 21,
#"email" : "name1@gmail.com"
#}
#CURL equivalent
#
#curl -X PUT \
#  http://localhost:8080/user \
#  -H 'content-type: application/json' \
#  -d '{
#"id" : 1",
#"_class" : "com.example.model.User",
#"name" : "name 1",
#"age" : 21,
#"email" : "name1@gmail.com"
#}'
#4. Delete
#http Request
#
#DELETE /user/1 HTTP/1.1
#Host: localhost:8080
#CURL equivalent
#
#curl -X DELETE \
#  http://localhost:8080/user/1 \
